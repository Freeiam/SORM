; ╔════════════════════════════════════════════════════════════════════════════╗
; ║  Файл:                                                                     ║
; ║  Программист:                                                              ║
; ║  Дата модификации:  06/08/05 8:08                                          ║
; ╟────────────────────────────────────────────────────────────────────────────╢
; ║  Использует:                                                               ║
; ╟────────────────────────────────────────────────────────────────────────────╢
; ║  Назначение:                                                               ║
; ║                                                                            ║
; ║                                                                            ║
; ║                                                                            ║
; ║                                                                            ║
; ╟────────────────────────────────────────────────────────────────────────────╢
; ║  Содержит:                                                                 ║
; ║                                                                            ║
; ║                                                                            ║
; ║                                                                            ║
; ╚════════════════════════════════════════════════════════════════════════════╝

; --- преобразование типа соединения из МО в ПУМу -----------------------------
; вход:         ds:[bp] - откуда писать (№ в формате ЦК - упакован, признак конца 0fh)
;             константы:
;               _CALL_N_B, _CALL_N_A, _CALL_N_A_LEN
;             переменные:
;               ATS_Num_Len, ATS_Zone
;               Prefix_MG, Prefix_MG_Mask, Prefix_ZN, Prefix_ZN_Mask, Prefix_MN, Prefix_MN_Mask
; выход:        dl      - СИДСовский тип разговора
;
@CallTypeToSIDS MACRO
                LOCAL   @CTTS_0, @CTTS_1, @CTTS_2, @CTTS_3, @CTTS_4, @CTTS_5, @CTTS_6
                LOCAL   @CTTS_Len_Next, @CTTS_Zone, @CTTS_Bad, @CTTS_Exit

                mov     al, ds:[bp + _CALL_TYPE]        ; МО тип разговора
                ; --- МО тип - внутренний -------------------------------------
@CTTS_0:        mov     dl, 1                           ; СИДС - внутренний !
                cmp     al, 0                           ; МО - внутренний ?
;;;mov ax, ds:[bp + _CALL_N_B]
                je      @CTTS_Exit                      ; ДА: МО внутренний -> СИДС внутренний
                ; --- МО тип - исходящий --------------------------------------
@CTTS_1:        cmp     al, 1                           ; МО - исходящий ?
                jne     @CTTS_2                         ; НЕТ - проверим входящий
                mov     dl, 2                           ; СИДС - исходящий местный
                mov     ax, ds:[bp + _CALL_N_B]         ; из первых четырёх цифр № Б
                rol     ah, 4
                rol     al, 4
                and     ax, PREF_B_MG_MASK              ; выделяем префикс МГ
                cmp     ax, PREF_B_MG                   ; выделился ?
                jne     @CTTS_Exit                      ; НЕТ - МО исх-й -> СИДС исх-й местный
                mov     dl, 3                           ; СИДС - исходящий внутризоновый
                mov     ax, ds:[bp + _CALL_N_B]         ; из первых цифр № Б
                rol     ah, 4                           ;\
                rol     al, 4                           ; \ подготовим для сравнения
                shr     ax, 4                           ; / c префиксом зоны (АТС)
                and     ax, PREF_A_ZN_MASK              ;/
                cmp     ax, PREF_A_ZN
                je      @CTTS_Exit                      ; ДА - МО исх-й -> СИДС исх-й зоновый
                mov     dl, 5                           ; СИДС - исходящий международный
                mov     ax, ds:[bp + _CALL_N_B]         ; из первых цифр № Б
                rol     ah, 4
                rol     al, 4
                and     ax, PREF_B_MN_MASK              ; выделяем МН префикс
                cmp     ax, PREF_B_MN                   ; выделился ?
                je      @CTTS_Exit                      ; ДА - МО исх-й -> СИДС исх-й МН
                mov     dl, 4                           ; остался только СИДС исх-й федеральный
                jmp     @CTTS_Exit                      ; МО исх-й -> СИДС исх-й федеральный
                ; --- МО тип - входящий ---------------------------------------
@CTTS_2:        mov     dl, 6                           ; СИДС - входящий местный !
                cmp     al, 2                           ; МО - входящий ?
                je      @CTTS_Exit                      ; ДА: МО вх-й -> СИДС вх-й местный
                ; --- МО тип - транзитный -------------------------------------
@CTTS_3:        cmp     al, 3                           ; МО - транзитный ?
                jne     @CTTS_4                         ; НЕТ - проверим неопределённый
                mov     dl, 11                          ; СИДС - транзитный местный
                mov     ax, ds:[bp + _CALL_N_B]         ; из первых цифр № Б
                rol     ah, 4
                rol     al, 4
                and     ax, PREF_B_MG_MASK              ; выделяем префикс МГ
                cmp     ax, PREF_B_MG                   ; выделился ?
                jne     @CTTS_Exit                      ; НЕТ - МО тр-й -> СИДС тр-й местный
;                mov     dl, 12                          ; СИДС - транзитный на зону
;                mov     ax, ds:[bp + _CALL_N_B]         ; из первых цифр № Б
;                cmp     ax, WORD PTR MG_PREF_B_SORM     ; выделился ?
;                je      @CTTS_Exit                      ; ДА - МО тр-й -> СИДС тр-й на зону
                mov     dl, 14                          ; СИДС - транзитный на МН
                mov     ax, ds:[bp + _CALL_N_B]         ; из первых цифр № Б
                rol     ah, 4
                rol     al, 4
                and     ax, PREF_B_MN_MASK              ; выделяем МН префикс
                cmp     ax, PREF_B_MN                   ; выделился ?
                je      @CTTS_Exit                      ; ДА - МО тр-й -> СИДС тр-й на МН
                mov     dl, 13                          ; остался только СИДС тр-й на фед-ный
                jmp     @CTTS_Exit                      ; МО тр-й -> СИДС тр-й на федеральный
                ; --- МО тип - неопределённый ---------------------------------
@CTTS_4:        mov     dl, 19                          ; СИДС - неопределённый !
                cmp     al, 4                           ; МО - неопределённый ?
                je      @CTTS_Exit                      ; ДА: МО неопр-й -> СИДС неопр-й
                ; --- определение длины АОН"а ---------------------------------
                xor     cx, cx                          ; считаем что АОН"а нет
                mov     si, bp                          ; \ указатель на 1-ую
                add     si, _CALL_N_A                   ; / цифру АОН"а
                cmp     BYTE PTR [si], 0feh             ; АОН вообще есть ?
                je      @CTTS_Zone                      ; НЕТ - это физический № А
                cmp     BYTE PTR [si + 3], 0eeh         ; ещё раз - АОН вообще есть ?
                je      @CTTS_Zone                      ; НЕТ - это номер УПАТС
@CTTS_Len_Next: movzx   ax, BYTE PTR [si]               ; очередные две цифры АОН"а (возможно)
                shl     ax, 4                           ; \ первую цифру в ah
                shr     al, 4                           ; / вторую - в al
                cmp     ah, 0fh                         ; проверяем код первой цифры
                ja      @CTTS_Zone                      ; - АОН кончился
                inc     cx                              ; увеличиваем длину АОН"а
                cmp     al, 0fh                         ; проверяем код второй цифры
                jae     @CTTS_Zone                      ; - АОН кончился
                inc     cx                              ; увеличиваем длину АОН"а
                inc     si                              ; двигаем указатель
                cmp     cx, _CALL_N_A_LEN * 2           ; есть смысл искать след. цифру ?
                jb      @CTTS_Len_Next                  ; ЕСТЬ -
                ; --- определение принадлежности АОН"а зоне АТС ---------------
@CTTS_Zone:
                xor     dh, dh                          ; пока считаем что зона не наша
                cmp     cx, 11                          ; проверяем длину АОН"а
                jb      @CTTS_5                         ; АОН"а нет или он короткий для анализа
                mov     ax, ds:[bp + _CALL_N_A]         ; из первых цифр № A
                rol     al, 4
                rol     ah, 4
                and     ax, PREF_A_ZN_MASK
                cmp     ax, PREF_A_ZN
                jne     @CTTS_5                         ; НЕТ - это не наша зона
                inc     dh                              ; ДА - АОН пришёл из нашей зоны
                ; --- МО тип - входящий МГ ------------------------------------
@CTTS_5:        mov     al, ds:[bp + _CALL_TYPE]        ; МО тип разговора
                cmp     al, 5                           ; МО - входящий МГ ?
                jne     @CTTS_6                         ; НЕТ - проверим транзитный от МГ
                mov     dl, 10                          ; СИДС - входящий МГ неопределённый
                cmp     cx, 11                          ; АОН достаточен для анализа ?
                jb      @CTTS_Exit                      ; НЕТ - МО вх от МГ -> СИДС вх МГ неопр-й
                mov     dl, 9                           ; СИДС - входящий международный
                ja      @CTTS_Exit                      ; АОН > 10: МО вх от МГ -> СИДС вх МН
                mov     dl, 7                           ; СИДС - входящий зоновый
                or      dh, dh                          ; код зоны совпал ?
                jnz     @CTTS_Exit                      ; ДА - МО вх от МГ -> СИДС вх зоновый
                mov     dl, 8                           ; остался 1 вариант: входящий федеральный
                jmp     @CTTS_Exit                      ; МО вх от МГ -> СИДС вх федеральный
                ; --- МО тип - транзитный от МГ -------------------------------
@CTTS_6:        cmp     al, 6                           ; МО - транзитный от МГ ?
                jne     @CTTS_Bad                       ; НЕТ - такого типа не может быть
                mov     dl, 18                          ; СИДС - транзитный МГ неопределённый
                cmp     cx, 11                          ; АОН достаточен для анализа ?
                jb      @CTTS_Exit                      ; НЕТ - МО тр от МГ -> СИДС тр МГ неопр-й
                mov     dl, 17                          ; СИДС - транзитный международный
                ja      @CTTS_Exit                      ; АОН > 10: МО тр от МГ -> СИДС тр МН
                mov     dl, 15                          ; СИДС - транзитный зоновый
                or      dh, dh                          ; код зоны совпал ?
                jnz     @CTTS_Exit                      ; ДА - МО тр от МГ -> СИДС тр зоновый
                mov     dl, 16                          ; остался 1 вариант: тр-ый федеральный
                jmp     @CTTS_Exit                      ; МО тр от МГ -> СИДС тр федеральный
                ; --- МО тип - лажовый, науке не известный --------------------
@CTTS_Bad:      or      al, 080h                        ; ставим признак лажи
                mov     dl, al                          ; вернём, чтоб записался в СИДС
@CTTS_Exit:
                ENDM

; --- формрование типа несостоявшегося соединения в ПУМу -----------------------------
; вход:         fs:[esi] - текущее соединение
; выход:        dl      - СИДСовский тип

@CallTypeFailToPUMA     MACRO
                        LOCAL   @@check_input, @@check_trans, @@go_zone, @@go_fed, @@go_mn
                        LOCAL   @@to_b, @@to_zone, @@to_fed, @@to_mn, @@to_undef
                        LOCAL   @@zone_on_amts, @@fed_on_amts, @@mn_on_amts, @@GO_EXIT
             push       ax bx
                        mov     al, fs:[esi].attr_a
                        mov     bl, fs:[esi].attr_b
                        ; =--- разберем что за тип несост. соединения ---=
                        cmp     al, 1
                        jne     @@check_input
                        ; --- исходящая связь ---
                        mov     dl, 1                   ; СИДС - внутренний
                        cmp     al, bl
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 2                   ; СИДС - исходящий местный
                        cmp     bl, 2
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 3                   ; СИДС - исходящий зоновый
                        cmp     bl, 3
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 4                   ; СИДС - исходящий федеральный
                        cmp     bl, 4
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 5                   ; СИДС - исходящий международный
                        cmp     bl, 5
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 19
                        jmp     @@GO_EXIT               ; здесь только непределенный
                        ; --- здесь вся входящая связь ---
        @@check_input:  cmp     bl, 1
                        jne     @@check_trans           ; проверим транзит
                        mov     dl, 6                   ; СИДС - входящий местный
                        cmp     al, 2
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 7                   ; СИДС - входящий зоновый
                        cmp     al, 3
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 8                   ; СИДС - входящий федеральный
                        cmp     al, 4
                        je      @@GO_EXIT               ; Нет - проверим вх. международный
                        mov     dl, 9                   ; СИДС - входящий международный
                        cmp     al, 5
                        je      @@GO_EXIT               ; Да!
                        mov     dl, 10
                        test    fs:[esi].soed_flags, sf_MG
                        jnz     @@GO_EXIT               ; здесь вход. от АМТС непределенный
                        mov     dl, 19                  ; здесь просто непределенный
                        jmp     @@GO_EXIT
                        ; ==================================
                        ; ---- ТРАНЗИТ -----
  @@check_trans:        ; --- начнем с № А
                        cmp     al, 2
                        jne     @@go_zone
                        mov     dl, 11
                        JMP     @@to_b
    @@go_zone:          cmp     al, 3
                        jne     @@go_fed
                        mov     dl, 12
                        JMP     @@to_b
    @@go_fed:           cmp     al, 4
                        jne     @@go_mn
                        mov     dl, 13
                        JMP     @@to_b
    @@go_mn:            mov     dl, 14
                        cmp     al, 5
                        je      @@to_b
                        ; --- здесь неопределенный ---
                        mov     dl, 18
                        test    fs:[esi].soed_flags, sf_MG
                        jnz     @@GO_EXIT                  ; здесь транзит. от АМТС непределенный
                        mov     dl, 19
                        jmp     @@GO_EXIT                  ; здесь просто неопределенный
        @@to_b:         ; --- проверим № Б и определим тип соединения
                        cmp     bl, 2
                        jne     @@to_zone
                        cmp     al, 2
                        je      @@GO_EXIT                      ; здесь транзитный местный
                        add     dl, 3
                        test    fs:[esi].soed_flags, sf_MG
                        jnz     @@GO_EXIT                      ; это все от АМТС
                        mov     dl, 11                         ; все - транзит. местные
                        jmp     @@GO_EXIT
    @@to_zone:          cmp     bl, 3
                        jne     @@to_fed
                        cmp     al, 2
                        je      @@zone_on_amts
                        add     dl, 3
                        test    fs:[esi].soed_flags, sf_MG
                        jnz     @@GO_EXIT                      ; это все от АМТС
    @@zone_on_amts:     mov     dl, 12                         ; транзит. зоновый на АМТС
                        jmp     @@GO_EXIT
    @@to_fed:           cmp     bl, 4
                        jne     @@to_mn
                        cmp     al, 2
                        je      @@fed_on_amts
                        add     dl, 3
                        test    fs:[esi].soed_flags, sf_MG
                        jnz     @@GO_EXIT                      ; это все от АМТС
    @@fed_on_amts:      mov     dl, 13                         ; транзит. федеральный на АМТС
                        jmp     @@GO_EXIT
    @@to_mn:            cmp     bl, 5
                        jne     @@to_undef
                        cmp     al, 2
                        je      @@mn_on_amts
                        add     dl, 3
                        test    fs:[esi].soed_flags, sf_MG
                        jnz     @@GO_EXIT                      ; это все от АМТС
    @@mn_on_amts:       mov     dl, 14                         ; транзит. международный на АМТС
                        jmp     @@GO_EXIT
    @@to_undef:         mov     dl, 18
                        test    fs:[esi].soed_flags, sf_MG
                        jnz     @@GO_EXIT                      ; это неопределенный от АМТС
                        mov     dl, 19                         ; здесь только неопределенный
@@GO_EXIT:              pop     bx ax
                        ENDM

; --- запись номера абонента в ПУМу -------------------------------------------
;
; вход:         es:[edi] - куда писать (№ в формате СИДС: байт длины, две цифры в тетраде)
;               ds:[bp]  - откуда писать (№ в формате ЦК - упакован, признак конца 0fh)
;               Prm_Offs - дополнительное смещение относительно ds:[bp]
;               Prm_Len  - байт в исходном номере
;
@TelNumToPUMA   MACRO   Num_Offs, Num_Len
                LOCAL   @TNTP_Len, @TNTP_Len_Save, @TNTP_Digits
                LOCAL   @TNTP_No_Num, @TNTP_Line_Num, @TNTP_UPATS_Num, @TNTP_Exit
                LOCAL   @TNTP_, @TNTP_Not_Nb, @TNTP_Print
                ; --- проверяем особые случаи
                cmp     BYTE PTR ds:[bp + Num_Offs + 3], 0eeh   ; 4-й байт = еe - это № УПАТС
                je      @TNTP_UPATS_Num                         ; на выдачу № УПАТС
                cmp     BYTE PTR ds:[bp + Num_Offs], 0feh       ; 1-й байт = fe - это № линии
                je      @TNTP_Line_Num                          ; на выдачу № линии вместо №А
                ; --- а есть ли номер вообще ?
                cmp     BYTE PTR ds:[bp + Num_Offs], 0ffh       ; ?
                je      @TNTP_No_Num                            ; НЕТ -
                ; --- обычный телефонный номер - определяем его длину
                xor     cx, cx                                  ; пока длины нет
                mov     si, bp                                  ; \ с 1-ой цифры
                add     si, Num_Offs                            ; / номера
@TNTP_Len:      mov     al, [si]                                ; следующая пара цифр
                cmp     al, 0f0h                                ; ст. тетрада F ?
                jae     @TNTP_Len_Save                          ; ДА - на запись длины в ПУМу
                inc     cx                                      ; НЕТ => засчитываем этот байт
                and     al, 0fh                                 ;    независимо от мл. тетрады
                cmp     al, 0fh                                 ; мл. тетрада F ?
                je      @TNTP_Len_Save                          ; ДА - на запись длины в ПУМу
                inc     si                                      ; адресуем следующую пару
                cmp     cx, Num_Len                             ; достигли max длины ?
                jb      @TNTP_Len                               ; ещё НЕТ - ищем дальше
                ; --- формируем и сохраняем в ПУМе длину номера
@TNTP_Len_Save: mov     al, cl                                  ; \ сохраняем длину
                @_STOSB                                         ; / № в ПУМе
                jcxz    @TNTP_Exit                              ; если номер пустой - длина == 0
                ; --- упаковываем и сохраняем в ПУМЕ сам номер
                mov     si, bp                                  ; \ с 1-ой пары
                add     si, Num_Offs                            ; / цифр номера
@TNTP_Digits:   lodsb                                           ; ещё пара
                @_STOSB                                         ; сохраним её
                loop    @TNTP_Digits                            ;
                jmp     @TNTP_Exit                              ; на выход
                ; --- сохраняем в ПУМЕ номер линии вместо № А
@TNTP_Line_Num: mov     al, 4                                   ; \ длина спецформатов
                @_STOSB                                         ; / всегда 4 байта
                movzx   eax, BYTE PTR ds:[bp + _CALL_CK_A]      ; № ЦК А
                shl     eax, 16                                 ; освободим место под физ. № А
                mov     ax, ds:[bp + Num_Offs + 1]              ; из № А заберем слово
                shl     ax, 3                                   ; \ склеим № ЦК
                shr     eax, 3                                  ; / и физ. № линии
                shl     eax, 8                                  ; \ в младший байт DD
                mov     al, 0feh                                ; / впишем признак физ. №
                @_STOSD                                         ; DD с абс. физ. № в ПУМу
                jmp     @TNTP_Exit                              ; на выход
                ; --- сохраняем в ПУМЕ номер УПАТС
@TNTP_UPATS_Num:mov     al, 4                                   ; \ длина спецформатов
                @_STOSB                                         ; / всегда 4 байта
                mov     eax, ds:[bp + Num_Offs]                 ; \ из МО в ПУМу
                @_STOSD                                         ; / двойным словом
                jmp     @TNTP_Exit                              ; на выход
                ; --- сохраняем в ПУМЕ специальные форматы номеров
@TNTP_No_Num:   xor     al, al                                  ; \ нулевую длину № в ПУМу
                @_STOSB                                         ; / и больше ничего !
if 0;;;1
@TNTP_Print:
        pushad
        mov ax,Num_Offs
        cmp ax,_CALL_N_B
        jne @TNTP_Not_Nb
        mov ah,clYELLOW+clBLUE*16
        mov cx,_CALL_UPATS+1
        mov di,160*31
@TNTP_: push cx
        movzx ebx,BYTE PTR ds:[bp]
        mov cx,2
        call print_H
        pop cx
        add di,4
        inc bp
        loop @TNTP_
@TNTP_Not_Nb:
        popad
endif
@TNTP_Exit:
                ENDM

; --- запись короткой временной метки (день, часы, минуты, секунды) в ПУМу ----
;
; вход:         ES:EDI - куда писать
;
TimeStampToPUMA PROC
                push    ax
                push    cx
                push    si
                mov     cx, 3
                lea     si, SECUNDA
TSTP_Time:      lodsb
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                loop    TSTP_Time
                mov     al, DEN_MES
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                pop     si
                pop     cx
                pop     ax
                ret
TimeStampToPUMA ENDP
; --- запись дня месяца в ПУМу ------------------------------------------------
;
; вход:         ES:EDI - куда писать
;
DayToPUMA       PROC
                mov     al, DEN_MES
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                ret
DayToPUMA       ENDP

; --- получение указателя на соединение ---------------------------------------
;
; вход:         ds:bp  - указатель на команду МО
; выход:        флаг С -  -> ОК,  -> указатель не получен
;               esi    - указатель на SOED, если == 0 указателя - НЕТ !!!
;               PEREM_ESI := esi
;
GetCallPtr      PROC
                mov     Is_Call_Num, 0  ; пока ещё № соединения не получен
                xor     esi, esi        ; пока ещё указатель не получен
                xor     eax, eax
                mov     al, ds:[bp + 5] ; № ЦК А
                cmp     al, KL_TIS      ; допустим ?
                jae     GCP_Exit        ; НЕТ - указателя так и не будет
                shl     eax, 16         ; освободим ax
                mov     al, ds:[bp + 6] ; рабочий № на ЦК А
                cmp     al, 128         ; допустим ?
                jae     GCP_Exit        ; НЕТ - указателя так и не будет
                mov     ah, ds:[bp + 2] ; часть физического № с № модема
                shr     ah, 1           ; ah  - теперь № модема
                shl     al, 1           ; al  - рабочий № на модеме прилепили к № модема (* 2)
                shl     ax, 4           ; ax  - рабочий № на ЦК прилепили к № ЦК (* 32)
                shr     eax, 4          ; eax - абс. раб. № вызывающей линии * 2 (т.к. слово !)
                mov     es, ss:SEG_ADR_SOED    ; сегмент номеров соединений
                mov     edi, eax               ; указатель на № соединения
                movzx   edi, WORD PTR es:[edi] ; сам № соединения
                cmp     edi, _SOED_MAX
                jae     GCP_Exit
                ; --- проверка корректности ссылки
                mov     eax, edi
                mov     ecx, _SOED_SIZE
                mul     ecx
                mov     esi, eax
                mov     al, ds:[bp + 5]
                cmp     al, fs:[esi].ck_a
                jne     GCP_Exit
                mov     ax, ds:[bp + 1]
                cmp     ax, fs:[esi].phys_a
                jne     GCP_Exit
                mov     Is_Call_Num, 255;
                mov     Call_Ptr, esi   ; запоним еsi чтоб дважды не звать эту функцию
                stc
                ret
GCP_Quit:       ;;;;;;;;;;;
GCP_Exit:       inc     No_Call_Count   ; отметим что не удалось установить связь с соединением
                clc
                ret
GetCallPtr      ENDP

;******************************************************************************
;* трансляция длительности занятия (и сбоя) СЛ c МО в ПУМу с добавлением      *
;* КОРОТКОГО ТАЙМСТАМПА:                                                      *
;* 235/150 --> 83h                                                            *
;* 235/151 --> 84h                                                            *
;******************************************************************************
; вход:         ds:[bp]   - на начало команды (на код 235)
;               PEREM_ESI - если не равно 0, то это указатель на соединение
;
LnLoadToPUMA    PROC
                ; --- получаем в esi указатель на соединение (или 0): fs - ПРЕДУСТАНОВЛЕН !
                mov     esi, Call_Ptr                           ; предварительно GetCallPtr !!!
                ; --- получаем указатель на ПУМовский буфер: es:edi
                call    PUMA_Start_Tar        ; es:edi
                ; --- код ПУМовского сообщения
                mov     al, 082h        ; код ПУМы, соответсвующий 235/150
                mov     cx, 6           ; min длина 235/150
                mov     edx, sf_A_FREE  ; флаг освобождения вызывающей линии
                cmp     BYTE PTR ds:[bp + 4], 150       ; это 235/150 ?
                je      LLTP_MessCode   ; ДА - код сообщения в ПУМе будет 82h
                inc     al              ; НЕТ - код сообщения будет 83h
                mov     cx, 9           ; min длина 235/151
                mov     edx, sf_B_FREE  ; флаг освобождения вызываемой линии
LLTP_MessCode:  @_STOSB                 ; код сообщения пишем в буфер ПУМы
                cmp     Is_Call_Num, 0  ; есть указатель на соединение ?
                je      LLTP_Call_Label ; НЕТ - отмечаться негде !
                or      fs:[esi].soed_flags, edx ;флажкуем получение соответствующей команды
                ; --- метка соединения
LLTP_Call_Label:mov     eax, 0ffffffffh ; на всякий случай признак отсутствия линии А
                cmp     ds:[bp + 1], ax ; № линии А существует ?
                je      LLTP_SendNa     ; НЕТ - отправим признак отсутсвия
                xor     eax, eax
                mov     ah, ds:[bp + 5] ; № ЦК А
                shl     eax, 8          ; освободим ax
                mov     ax, ds:[bp + 1] ; физический № на ЦК А
                shl     ax, 3           ; сращиваем № ЦК и физ. №
                shl     eax, 5          ; освобождаем al
                mov     al, ds:[bp + 6] ; рабочий № на ЦК А
                ror     eax, 8          ; рабочий № в старший байт
LLTP_SendNa:    @_STOSD                 ; метку соединения пишем в буфер ПУМы
                ; --- короткая временная метка
                call    TimestampToPUMA ; в буфер ПУМы её
                ; --- абс. физический номер вызываемой линии
                cmp     BYTE PTR ds:[bp + 4], 150       ; это 235/150 ?
                je      LLTP_Len        ; ДА - номера вызываемой линии НЕТ
                mov     eax, 0fffffffh  ; НЕТ - на всякий случай признак отсутствия линии Б
                cmp     ds:[bp + 11], ax; № линии Б существует ?
                je      LLTP_SendNb     ; НЕТ - отправим признак отсутсвия
                xor     eax, eax        ;
                mov     ah, ds:[bp + 10]; № ЦК Б
                shl     eax, 8
                mov     ax, ds:[bp + 11]; физический № на ЦК Б
                shl     ax, 3           ; сращиваем № ЦК и физ. №
                shr     eax, 3          ; абс. физ. № Б в трёх младших байтах
LLTP_SendNb:    @_STOSW                 ; \
                shr     eax, 16         ;  > номер линии Б пишем в буфер ПУМы
                @_STOSB                 ; /
                ; --- длительность занятия
LLTP_Len:       mov     eax, ds:[bp + 7]; пересылаем
                @_STOSW                 ; \
                shr     eax, 16         ;  > три байта
                @_STOSB                 ; /
                ; --- коды сбоев, если они есть
                movzx   ax, ds:[bp + 3] ; из фактической длины команды
                sub     ax, cx          ; вычтем её минимальную длину
                jbe     LLTP_PUMA_OK    ; если min >= фактической больше слать нечего
                mov     cx, ax          ; в сх число дополнительных байт
                ; --- запомним коды сбоев в SOED"ах для формирования "неудов"
                mov     bx, bp          ; \ bx - указатель на код
                add     bx, 10          ; /      сбоя в команду 235 / 150
                mov     edx, sf_A_FAIL  ; флаг сбоя вызывающей линии
                cmp     BYTE PTR ds:[bp + 4], 150       ; это 235/150 ?
                je      LLTP_SaveFail   ; ДА - флажкуем сбой и сохраняем его код и место
                mov     edx, sf_B_FAIL  ; флаг сбоя вызываемой линии
                add     bx, 3           ; bx - указатель на код сбоя в команду 235 / 151
                ; --- флажкуем в SOED сбой линии и сохраняем код и место сбоя
LLTP_SaveFail:  cmp     Is_Call_Num, 0  ; есть указатель на соединение ?
                je      LLTP_Tail       ; НЕТ - отмечаться негде !
                or      fs:[esi].soed_flags, edx        ; флаг наличия сбоя
                mov     ax, [bx]                        ; код и место сбоя
                xchg    ah, al
                mov     WORD PTR fs:[esi].ln_cause, ax  ; причина и место
                ; --- перешлём СИДС"у "хвост" с "аварийной" информацией
LLTP_Tail:      mov     al, [bx + 1]    ; код сбоя
                @_STOSB                 ;
                mov     al, [bx]        ; место сбоя
                @_STOSB                 ;
                mov     al, [bx + 2]    ; количество выданных цифр
                @_STOSB                 ;
LLTP_PUMA_OK:   call    PUMA_Send_Tar   ; закрываем запись
                ret
LnLoadToPUMA    ENDP


;******************************************************************************
;* трансляция поминутных срезов нагрузки модемов ЦК в ПУМу с добавлением      *
;* КОРОТКОГО ТАЙМСТАМПА:                                                      *
;* 235/152 --> 94h                                                            *
;******************************************************************************
; вход:         ds:[bp] - на начало команды (на код 235)
;
ModLoadToPUMA   PROC
                call    PUMA_Start_Tar
                ; --- код ПУМовского сообщения
                mov     al, 095h        ; код ПУМы, соответсвующий 235/152
                @_STOSB                 ; код сообщения пишем в буфер ПУМы
                ; --- день события
                call    DayToPUMA
                ; --- номер ЦК
                mov     al, ds:[bp + 5] ; № ЦК
                @_STOSB                 ; № ЦК пишем в буфер ПУМы
                ; --- номер минуты в сутках
                mov     ax, ds:[bp + 1] ;
                @_STOSW                 ;
                ; --- собственно модемная нагрузка
                mov     cx, 4           ; 16 модемов - 4 DD
                mov     bx, bp
                add     bx, 6           ; bp - на 1-й байт собственно нагрузки
MLTP_ModLoad:   mov     eax, [bx]       ; \
                @_STOSD                 ; | работаем двойными слловами
                add     bx, 4           ; | для скорости
                loop    MLTP_ModLoad    ; /
                ; --- завершение записи в ПУМу
                call    PUMA_Send_Tar          ; закрываем запись
                ret
ModLoadToPUMA   ENDP


;******************************************************************************
;* трансляция сбоев модемов в ПУМУ с добавлением КОРОТКОГО ТАЙМСТАМПА:        *
;* 235/61 --> 93h                                                             *
;******************************************************************************
;┌─────┬────────────────────────────┬────────────────────────────────────────┐
;│ 61  │4. ОТКАЗ ОТ ЦК НА УСТАНОВКУ │5.   НОМЕР ЦК                    -1б    │
;│     │   СОЕДИНЕНИЯ               │6.   НОМЕР МОДЕМА                -1б    │
;│     │                            │7-8. ФИЗИЧЕСКИЙ НОМЕР ЛИНИИ      -2б    │
;│     │                            │9.   ПРИЧИНА ОТКАЗА              -1б    │
;│     │                            │10.  НАБОР                       -?б    │
;└─────┴────────────────────────────┴────────────────────────────────────────┘
; вход:         ds:[bp] - на начало команды (на код 235)
;
ModErrToPUMA    PROC
                call    PUMA_Start_Tar
                ; --- код ПУМовского сообщения
                mov     al, 094h        ; код ПУМы, соответсвующий 235/61
                @_STOSB                 ; код сообщения пишем в буфер ПУМы
                ; --- временная метка события
                call    TimestampToPUMA
                ; --- № ЦК, № модема, физический № линии
                mov     eax, ds:[bp + 5]; 3 первых параметра из тела команды МО
                @_STOSD                 ; пишем их в буфер ПУМы
                ; --- причина отказа
                mov     al, ds:[bp + 9] ; 4-й параметр из тела команды МО
                @_STOSB                 ; пишем их в буфер ПУМы
                ; --- последний параметр переменной длины - набор
                mov     ch, ds:[bp + 3] ; фактическая длина команды
                sub     ch, 6           ; длина набора
                jbe     METP_Exit       ; набора нет вообще или какая-то беда
                mov     al, ch          ; \  длина упакованного
                inc     al              ;  > набора с поправкой на
                shr     al, 1           ; /  нечётное число цифр
                @_STOSB                 ; длину упакованного набора в ПУМу
                mov     al, cl          ; столько байт в упкованном наборе
                mov     bx, bp
                add     bx, 10          ; указатель на первую цифру набора
METP_Digits:    mov     ax, [bx]        ; сразу 2 цифры набора
                cmp     cl, 1           ; последняя пара ?
                jne     METP_NotEnd     ; НЕТ -
                test    ch, 1           ; ДА - но число цифр в наборе чётное ?
                jz      METP_NotEnd     ; ДА - признак конца не нужен
METP_InsEnd:    mov     ah, 0ffh        ; НЕТ - последняя тетрада должна быть 0fh
METP_NotEnd:    shl     ah, 4           ; \ 2 цифры в байт, причём цифра пришедшая
                rol     ax, 4           ; / раньше -> в старшую тетраду
                @_STOSB                 ; очередную пару в ПУМу
                add     bx, 2           ; указатель на следующую пару цифр набора
                dec     cl              ; счётчик пар - все ?
                jnz     METP_Digits     ; НЕТ - продолжим
                ; --- завершение записи в ПУМу
METP_Exit:      call    PUMA_Send_Tar          ; закрываем запись
                ret
ModErrToPUMA    ENDP


;******************************************************************************
;* запись в SOED окончательного (и бесповоротного) отказа от ЦК               *
;******************************************************************************
;┌─────┬────────────────────────────┬────────────────────────────────────────┐
;│ 62  │4. ОТКАЗ ОТ ЦК НА УСТАНОВКУ │5.   НОМЕР ЦК                    -1б    │
;│     │   СОЕДИНЕНИЯ               │6.   АБС. РАБОЧИЙ № ЛИНИИ        -2б    │
;│     │                            │8.   ПРИЧИНА ОТКАЗА              -1б    │
;└─────┴────────────────────────────┴────────────────────────────────────────┘
; вход:         ds:[bp] - на начало команды (на код 235)
;
CKFailToSOED    PROC
                ; --- получаем в edi указатель на соединение (или 0): fs - ПРЕДУСТАНОВЛЕН !
                xor     eax, eax
                mov     al, ds:[bp + 5] ; № ЦК А
                cmp     al, KL_TIS      ; допустим ?
                jae     CFTS_Exit       ; НЕТ - это всё
                shl     eax, 16         ; освободим ax
                mov     ax, ds:[bp + 6] ; рабочий № линии на ЦК
                shl     ax, 5           ; ax  - рабочий № линии на ЦК прилепим к № ЦК (* 32)
                shr     eax, 4          ; eax - абс. раб. № линии * 2 (т.к. слово !)
                mov     es, ss:SEG_ADR_SOED    ; сегмент номеров соединений
                mov     edi, eax               ; указатель на № соединения
                movzx   edi, WORD PTR es:[edi] ; сам № соединения
                cmp     edi, _SOED_MAX  ; допустим ?
                jae     CFTS_Exit       ; НЕТ - дальше не дрыгаемся
                shl     edi, 4          ; а это уже указатель - т.к. каждый SOED по 16 байт
                ; --- проверяем и запоминаем причину
                mov     al, ds:[bp + 8] ; причина отказа
if 0
                cmp     al, 3           ; разъединение ?
                je      CFTS_OK         ; ДА - принимаем
                cmp     al, 14          ; вызываемый занят ?
                je      CFTS_OK         ; ДА - принимаем
                cmp     al, 68          ; неиспользуемый № ?
                je      CFTS_OK         ; ДА - принимаем
                cmp     al, 69          ; направление закрыто ?
                je      CFTS_OK         ; ДА - принимаем
                cmp     al, 71          ; временный отказ ?
                je      CFTS_OK         ; ДА - принимаем
                cmp     al, 72          ; перегрузка коммутации ?
                je      CFTS_OK         ; ДА - принимаем
                cmp     al, 73          ; все СЛ заняты ?
                jne     CFTS_Exit       ; НЕТ - других знать не хотим !
endif
CFTS_OK:        or      fs:[edi].soed_flags, sf_CK_FAIL ; флажкуем известную причину
                mov     fs:[edi].ck_cause, al           ; и запоминаем её
CFTS_Exit:      ret
CKFailToSOED    ENDP


;******************************************************************************
;* трансляция тарификационных пакетов в ПУМУ с добавлением МЕТКИ СОЕДИНЕНИЯ и *
;* КОРОТКОГО ТАЙМСТАМПА:                                                      *
;* 235/12 --> 81.81h                                                          *
;* 235/22 --> 81.81h                                                          *
;******************************************************************************
;┌─────┬────────────────────────────┬─────────────────────────────────────────┐█
;│  12 │4. ПЕРЕДАЧА ТАРИФИКАЦИОННОГО│5.     НОМЕР ЦК                     - 1б │█
;│     │   ПАКЕТА ОТ ЦК НА          │6.     НОМЕР ПАКЕТА                 - 1б │█
;│     │   ТАРИФИКАЦИОННЫЙ БЛОК     │7.     ТИП СОЕДИНЕНИЯ               - 1б │█
;│     │                            │8-9.   ДАТА НАЧАЛА РАЗГОВОРА        - 2б │█
;│     │                            │10-12. ВРЕМЯ НАЧАЛА РАЗГОВОРА       - 3б │█
;│     │                            │13-15. ДЛИТЕЛЬНОСТЬ                 - 3б │█
;│     │                            │16-24. НОМЕР ТЕЛЕФОНА ВЫЗЫВАЮЩЕГО   - 9б │█
;│     │                            │25-37. НОМЕР ТЕЛЕФОНА ВЫЗЫВАЕМОГО   - 13б│█
;│     │                            │38-39. ФИЗИЧЕСКИЙ НОМЕР ВЫЗЫВАЮЩЕГО - 2б │█
;│     │                            │40.    НОМЕР ЦК ВЫЗЫВАЕМОГО         - 1б │█
;│     │                            │41-42. ФИЗИЧЕСКИЙ НОМЕР ВЫЗЫВАЕМОГО - 2б │█
;│     │                            │43.    BEARER SERVICE               - 1б │█
;│     │                            │44.    ПЕРЕВЕДЕННОСТЬ РАЗГОВОРА     - 1б │█
;│     │                            │1.     Nра [127]                    - 1б │█
;├─────┼────────────────────────────┼─────────────────────────────────────────┤█
; вход:         ds:[bp] - на начало команды (на код 235)
;
_CALL_WITHOUT_UPATS EQU 41      ; длина тарификационной команды без дополнительного № УПАТС

_CALL_WORK_A    EQU     1       ; рабочий номер на ЦК А
_CALL_CMD_LEN   EQU     3       ; байтдлины 235-ой команды
_CALL_CK_A      EQU     5       ; номер ЦК А
_CALL_PACK_N    EQU     6       ; номер тарификационного пакета на ЦК А
_CALL_TYPE      EQU     7       ; тип разговора
_CALL_BEG_DATE  EQU     8       ; дата начала разговора
_CALL_BEG_TIME  EQU     10      ; время начала разговора
_CALL_LEN       EQU     13      ; длительность разговора
_CALL_N_A       EQU     16      ; тел. номер вызывающего
_CALL_N_B       EQU     25      ; тел. номер вызываемого
_CALL_PHYS_A    EQU     38      ; физический номер вызывающего
_CALL_CK_B      EQU     40      ; номер ЦК Б
_CALL_PHYS_B    EQU     41      ; физический номер вызываемого
_CALL_BEARER    EQU     43      ; среда передачи + признак записи
_CALL_READDR    EQU     44      ; тип переадресации
_CALL_UPATS_NUM EQU     45      ; № телефона в УПАТС
_CALL_UPATS     EQU     47      ; № УПАТС

_CALL_N_A_LEN   EQU     _CALL_N_B - _CALL_N_A    ; байт в номере вызывающего
_CALL_N_B_LEN   EQU     _CALL_PHYS_A - _CALL_N_B ; байт в номере вызываемого

CallToPUMA      PROC
                ; --- преобразование типа разговора из АТСного в СИДСовский
                @CallTypeToSIDS                         ; в dl - тип разговора
                ; === начинаем перекодирование тариф. пакета из МО в ПУМу =====
                call    PUMA_Start_Tar                        ; получаем указатель на запись
                ; --- код ПУМовского сообщения
                mov     al, 80h                        ; код ПУМы, соответ-=й 235/12 и 235/22
                @_STOSB                                 ; код сообщения пишем в буфер ПУМы
                ; --- метка соединения
                xor     eax, eax
                mov     ah, ds:[bp + _CALL_CK_A]        ; № ЦК А
                shl     eax, 8
                mov     ax, ds:[bp + _CALL_PHYS_A]      ; физический № на ЦК А
                shl     ax, 3                           ; сращиваем № ЦК и физ. №
                shl     eax, 5                          ; освобождаем al
                mov     al, ds:[bp + _CALL_WORK_A]      ; рабочий № на ЦК А
                ror     eax, 8                          ; рабочий № в старший байт
                @_STOSD                                 ; метку соединения пишем в буфер ПУМы
                ; --- день и время начала разговора
                mov     al, ds:[bp + _CALL_BEG_TIME]    ; секунды
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                mov     al, ds:[bp + _CALL_BEG_TIME + 1]; минуты
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                mov     al, ds:[bp + _CALL_BEG_TIME + 2]; часы
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                mov     al, ds:[bp + _CALL_BEG_DATE + 1]; день
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                ; --- номер вызываемой линии
                mov     eax, 0ffffffffh                 ; признак отсутствия линии Б
                cmp     ds:[bp + _CALL_PHYS_B], ax      ; № линии Б существует ?
                je      CTP_Send_Nb                     ; НЕТ - отправим признак отсутствия
                xor     eax, eax
                mov     ah, ds:[bp + _CALL_CK_B]        ; № ЦК Б
                shl     eax, 8
                mov     ax, ds:[bp + _CALL_PHYS_B]      ; физический № на ЦК Б
                shl     ax, 3                           ; сращиваем № ЦК и физ. №
                shr     eax, 3                          ; освобождаем al
CTP_Send_Nb:    @_STOSW                                 ; \
                shr     eax, 16                         ;  > № линии Б в буфер ПУМы
                @_STOSB                                 ; /
                ; --- ранее полученный тип разговора + переадресация
                mov     al, ds:[bp + _CALL_READDR]
                and     al, 3
                shl     al, 5
                or      al, dl
                @_STOSB
                ; --- длительность разговора
                mov     eax, ds:[bp + _CALL_LEN]
                @_STOSW
                shr     eax, 16
                @_STOSB
                ; --- среда передачи с типом записи
                mov     al, ds:[bp + _CALL_BEARER]
                @_STOSB
                ; --- номер тарификационного пакета на ЦК А
                mov     al, ds:[bp + _CALL_PACK_N]
                @_STOSB
                ; --- номер вызывающего в ПУМу
                @TelNumToPUMA   _CALL_N_A, _CALL_N_A_LEN
                ; --- номер вызываемого в ПУМу
                @TelNumToPUMA   _CALL_N_B, _CALL_N_B_LEN
                ; --- проверка на дополнительный № УПАТС
                cmp     BYTE PTR ds:[bp + _CALL_CMD_LEN], _CALL_WITHOUT_UPATS
                jbe     CTP_OK
                mov     al, ds:[bp + _CALL_UPATS]
                @_STOSB
                mov     ax, ds:[bp + _CALL_UPATS_NUM]
                @_STOSW
                ; ---
                mov     al, ds:[bp + _CALL_BEG_DATE]; месяц
                mov     ah, al
                and     al, 0fh
                and     ah, 0f0h
                shr     ah, 3
                add     al, ah
                shl     ah, 2
                add     al, ah
                @_STOSB
                ; --- завершение записи в ПУМу
CTP_OK:         call    PUMA_Send_Tar          ; закрываем запись
                ret
CallToPUMA      ENDP



;******************************************************************************
;* формирования сообщения о неудачном соединении для ПУМы   --> 81.82h        *
;******************************************************************************
; вход:         ds:[bp]   - на начало команды (на код 235)
;               PEREM_ESI - если не равно 0, то это указатель на соединение
;
FailedCallsToPUMA       PROC
                ; --- получаем в esi указатель на соединение (или 0): fs - ПРЕДУСТАНОВЛЕН !
                cmp     Is_Call_Num, 0                          ; есть ук-ль на соединение ?
                je      FCTP_Exit                               ; НЕТ - ловить нечего !!!
                mov     esi, Call_Ptr                           ; предварительно GetCallPtr !!!
                test    fs:[esi].soed_flags, sf_FAIL_OUT     ; по этому соединению уже отдали несостоявшееся?
                jnz     FCTP_Exit                               ; ДА - НА ВЫХОД
                ; *** проверяем необходимость формирования "неуда" ************
                ; === проверка "чёрного" списка
                mov     bl, fc_IN_BLACK                         ; "чёрный" список
                mov     dx, 09000h                              ; место АТС, деталей нет
                ; --- не нужно так делать, разберем пар-ры более подробно для ч.с.!
                ;;;test    fs:[esi].soed_flags, sf_BLACK_DENY      ; сработал ?
                ;;;jnz     FCTP_PUMA_Addr                          ; ДА -
                ; === проверка освобождения от линии А ========================
                test    fs:[esi].soed_flags, sf_A_FREE          ; освобождение от А ?
                jz      FCTP_Is_B_Free                          ; НЕТ - может есть от Б ?
                ; --- есть освобождение от линии А ----------------------------
                test    fs:[esi].soed_flags, sf_A_FAIL          ; сбой линии А ?
                jz      FCTP_A_No_Fail                          ; НЕТ -
                ; --- отказ от вызывающей линии -------------------------------
FCTP_A_Fail:    mov     dx, WORD PTR fs:[esi].ln_cause          ; детализация и место отказа
                test    dh, fc_ATS_FLAG                         ; место отказа сеть ?
                jnz     FCTP_A_ATS                              ; НЕТ - сама АТС
FCTP_A_Net:     ; --- отказ вызывающей линии из-за сети
                mov     bl, fc_NOT_FULL                         ; проверяем был ли полный № ?
                cmp     dl, 147                                 ; был ?
                je      FCTP_PUMA_Addr                          ; НЕТ -
                mov     bl, fc_NO_B_ANS                         ; вызываемый не отвечает ?
                cmp     dl, 166                                 ; да ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_WHITE_LIST                       ; отбой по "белому списку"
                cmp     dl, 187                                 ; был?
                jne     Net_Fail                                ; нет - причина отказа - сеть
                ; -- {Paul.N} -- [18/06/2013] -->
                ; --- здесь отметим отбой по "белому списку"
                or      FG_Duty1, _fg_wt_new                    ;
                jmp     FCTP_PUMA_Addr                          ; да!
  Net_Fail:     mov     bl, fc_NET_FAIL                         ; причина отказа - сеть
                jmp     FCTP_PUMA_Addr
FCTP_A_ATS:     ; --- отказ вызывающей линии из-за АТС
                ; --- перекодируем избранные внутренние причины
                mov     bl, fc_NOT_FULL                         ; проверяем был ли полный № ?
                cmp     dl, 147                                 ; был ?
                je      FCTP_PUMA_Addr                          ; НЕТ -
                mov     bl, fc_B_BUSY                           ; проверяем занятость Б
                cmp     dl, 161                                 ; она ?
                jb      FCTP_A_Std                              ; на формирование стандартной причины - внут. сбой АТС
                je      FCTP_PUMA_Addr                          ; ДА -
                cmp     dl, 162                                 ; она же, но высокая ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_ATS_NOT_USED                     ; проверяем неиспользуемый №
                cmp     dl, 164                                 ; он ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_ATS_NO_PATH                      ; проверяем неверную маршрутизацию
                cmp     dl, 165                                 ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NO_B_ANS                         ; вызываемый не отвечает
                cmp     dl, 166                                 ; так ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_ATS_FAIL                         ; проверяем внутренний сбой
                cmp     dl, 167                                 ; был ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_CK_OVERLOAD                      ; проверяем перегрузку ЦК
                cmp     dl, 168                                 ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_SL_OVERLOAD                      ; проверяем перегрузку СЛ
                cmp     dl, 169                                 ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_DVO                              ; ДВО
                cmp     dl, 172                                 ; активация ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_IN_BLACK                         ; "чёрный" список
                cmp     dl, 173                                 ; входящий ?
                je      FCTP_PUMA_Addr                          ; ДА -
                cmp     dl, 174                                 ; исходящий ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_BAD_ANI                          ; недопустимый АОН ?
                cmp     dl, 175                                 ; да ?
                je      FCTP_PUMA_Addr                          ; ДА -
                ; ---
                mov     bl, fc_DVO                              ; ДВО - 176 ... 180
                cmp     dl, 176                                 ; неполный набор ?
                jb      FCTP_A_Std                              ; на формирование стандартной причины - внут. сбой АТС
                cmp     dl, 180                                 ; услуга недоступна ?
                jbe     FCTP_PUMA_Addr                          ; ДА -
                ; ---
                mov     bl, fc_CRACK_PASS                       ; взлом пароля - 181 ... 186
                cmp     dl, 186                                 ; блокировка по паролю ?
                jbe     FCTP_PUMA_Addr                          ; ДА -
                ; ---
                mov     bl, fc_WHITE_LIST                       ; отбой по "белому списку"
                cmp     dl, 187                                 ; был?
                jne     FCTP_A_Std                              ; да -
                ; -- {Paul.N} -- [18/06/2013] -->
                ; --- здесь отметим отбой по "белому списку"
                or      FG_Duty1, _fg_wt_new                    ;
                jmp     FCTP_PUMA_Addr
                ; --- все остальные причины считаем внутренним сбоем
FCTP_A_Std:     mov     bl, fc_ATS_FAIL                         ; НЕТ - причина - внутр. сбой
                jmp     FCTP_PUMA_Addr                          ; запишем эту БЕДУ в ПУМу
FCTP_A_No_Fail: ; --- нет отказа от вызывающей линии --------------------------
                ; --- проверим кто отбил линию А - не ЦК ли ?
                test    fs:[esi].soed_flags, sf_CK_FAIL         ; А отбилась сама ?
                jz      FCTP_Is_A_Full                          ; ДА - а был ли полный № ?
                ; --- А отбилась не сама - отбой на линию А пришёл от ЦК
                mov     al, fs:[esi].ck_cause                   ; код отбойной команды от ЦК
                mov     bl, fc_ATS_FAIL                         ; проверяем внутренний сбой
                cmp     al, 3                                   ; был ?
                je      FCTP_Is_B_Fail                          ; ДА - но освободилась ли Б ?
                cmp     al, 71                                  ; и ещё раз: был ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_B_BUSY                           ; проверяем занятость Б
                cmp     al, 14                                  ; она ?
                je      FCTP_Is_B_Fail                          ; ДА - но освободилась ли Б ?
                mov     bl, fc_ATS_NOT_USED                     ; проверяем неиспользуемый №
                cmp     al, 68                                  ; он ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_ATS_NO_PATH                      ; проверяем неверную маршрутизацию
                cmp     al, 69                                  ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_CK_OVERLOAD                      ; проверяем перегрузку ЦК
                cmp     al, 72                                  ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_SL_OVERLOAD                      ; проверяем перегрузку СЛ
                cmp     al, 73                                  ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                ; --- вывод непонятной причины из 235 / 62 + 0c0h в ПУМУ - ОТЛАДКА !
                xor     bl, bl                                  ; причина отказа - не известна
                mov     dl, fs:[esi].ck_cause                   ; детали - отбойный код
                jmp     FCTP_PUMA_Addr                          ; запишем эту БЕДУ в ПУМу
                ; --- проверка сбоя линии Б
FCTP_Is_B_Fail: test    fs:[esi].soed_flags, sf_B_FAIL          ; был отказ от Б ?
                jnz     FCTP_B_Fail                             ; ДА - уточним причину
                jmp     FCTP_PUMA_Addr                          ; НЕТ - оставим ту же причину
                ; --- проверяем был ли полный номер
FCTP_Is_A_Full: test    fs:[esi].soed_flags, sf_NUM_FULL        ; получен полный № ?
                jnz     FCTP_Is_Answer                          ; ДА - ответил ли Б ?
                ; --- неполный номер
                mov     bl, fc_NOT_FULL                         ; неполный набранный №
                jmp     FCTP_PUMA_Addr                          ; на запись в ПУМу
                ; --- проверяем был ли ответ (или хотя бы отбой)
FCTP_Is_Answer: test    fs:[esi].soed_flags, sf_ANS + sf_REL    ; Б отвечал № ?
                jnz     FCTP_Exit                               ; ДА - "неуд" не нужен !!!
                                                                ; НЕТ - проверим свободу от Б
                ; === проверяем освобождение от линии Б =======================
FCTP_Is_B_Free: test    fs:[esi].soed_flags, sf_B_FREE          ; освобождение от Б ?
                jz      FCTP_Exit                               ; НЕТ - будем ждать его
                ; --- проверяем сбой Б
                test    fs:[esi].soed_flags, sf_B_FAIL          ; сбой от Б ?
                jnz     FCTP_B_Fail                             ; ДА - обработаем его
                ; --- нет отказа Б -> проверим был ли ответ Б -----------------
FCTP_Is_B_Ans:  test    fs:[esi].soed_flags, sf_ANS + sf_REL    ; ответ Б ?
                jnz     FCTP_Exit                               ; ДА - "неуд" не нужен !!!
                ; --- без ответа Б
                mov     bl, fc_NO_B_ANS                         ;
                mov     dx, 09000h                              ;
                jmp     FCTP_PUMA_Addr                          ; на запись в ПУМу
                ; --- отказ от вызываемой линии (Б) ---------------------------
FCTP_B_Fail:    mov     dx, WORD PTR fs:[esi].ln_cause          ; детализация и место отказа
                test    dh, fc_ATS_FLAG                         ; место отказа сеть ?
                jnz     FCTP_A_ATS                              ; НЕТ - сама АТС
FCTP_B_Net:     ; --- отказ вызываемой линии из-за сети
                ; --- проверяем нормальные разъединения от сети
                cmp     dl, net_UNSPEC                          ; нормальный неопределённый ?
                je      FCTP_Is_B_Ans                           ; ДА - надо проверить ответ !
                cmp     dl, net_NORMAL_CLEAR                    ; нормальный отбой ?
                je      FCTP_Is_B_Ans                           ; ДА - надо проверить ответ !
                ; --- проверяем аварийные разъединения от сети
                mov     bl, fc_NET_NOT_USED                     ; проверим неиспользуемый №
                cmp     dl, net_NOT_USED                        ; он ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NET_NO_PATH                      ; проверим маршрутизацию сети
                cmp     dl, net_NO_PATH                         ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NO_B_ANS                         ; вызываемый не отвечает ?
                cmp     dl, net_NO_ANS                          ; так ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NET_OVERLOAD                     ; проверим перегрузку сети
                cmp     dl, net_OVERLOAD                        ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_B_BUSY                           ; проверим занятость сети
                cmp     dl, net_B_BUSY                          ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NOT_FULL                         ; проверяем был ли полный № ?
                cmp     dl, 147                                 ; был ?
                je      FCTP_PUMA_Addr                          ; НЕТ -
                mov     bl, fc_B_BUSY                           ; проверяем занятость Б
                cmp     dl, 161                                 ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                cmp     dl, 162                                 ; она же, но высокая ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NET_NOT_USED                     ; проверяем неиспользуемый №
                cmp     dl, 164                                 ; он ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NET_NO_PATH                      ; проверяем неверную маршрутизацию
                cmp     dl, 165                                 ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NO_B_ANS                         ; вызываемый не отвечает
                cmp     dl,166                                  ; так ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NET_FAIL                         ; проверяем внутренний сбой
                cmp     dl, 167                                 ; был ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NET_OVERLOAD                     ; проверяем перегрузку ЦК
                cmp     dl, 168                                 ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_SL_OVERLOAD                      ; проверяем перегрузку СЛ
                cmp     dl, 169                                 ; она ?
                je      FCTP_PUMA_Addr                          ; ДА -
                mov     bl, fc_NET_FAIL                         ; НЕТ - абстрактный отказ сети

                ; *** "неуд" надо отправлять - начинаем формирование пакета для ПУМы
FCTP_PUMA_Addr: call    PUMA_Start_Tar        ; получаем указатель на ПУМовский буфер: es:edi
                ; --- код ПУМовского сообщения --------------------------------
                mov     al, 081h                                ; код "неуда"
                @_STOSB                                         ;
                ; --- метка соединения ----------------------------------------
                mov     eax, 0ffffffffh                         ; признак отсутствия линии А
                cmp     ds:[bp + 1], ax                         ; № линии А существует ?
                je      FCTP_SendNa                             ; НЕТ - так и запишем
                xor     eax, eax
                mov     ah, ds:[bp + 5]                         ; № ЦК А
                shl     eax, 8                                  ; освободим ax
                mov     ax, ds:[bp + 1]                         ; физический № на ЦК А
                shl     ax, 3                                   ; сращиваем № ЦК и физ. №
                shl     eax, 5                                  ; освобождаем al
                mov     al, ds:[bp + 6]                         ; рабочий № на ЦК А
                ror     eax, 8                                  ; рабочий № в старший байт
FCTP_SendNa:    @_STOSD                                         ; метку соединения в ПУМу
                ; --- короткая временная метка начала соединения --------------
                movzx   ax, SECUNDA
                shl     ax, 4
                shr     al, 4
                aad
FCTP_Sec:       @_STOSB
                movzx   ax, MIN
                shl     ax, 4
                shr     al, 4
                aad
FCTP_Min:       @_STOSB
                movzx   ax, CHAS
                shl     ax, 4
                shr     al, 4
                aad
FCTP_Hour:      @_STOSB
                movzx   ax, DEN_MES
                shl     ax, 4
                shr     al, 4
                aad
FCTP_Day:       @_STOSB
                ; --- абс. физический номер вызываемой линии ------------------
                movzx   eax, fs:[esi].ck_b
                shl     eax, 13
                or      ax, fs:[esi].phys_b
                @_STOSW
                shr     eax, 16
                @_STOSB
                ; --- проверка необходимости замены активации ДВО на использование ДВО
                cmp     dl, 172                         ; активация ДВО ?
                jne     FCTP_not_172                    ; НЕТ -
                cmp     WORD PTR ds:[bp + 14], 0        ; справка о времени (*00) ?
                je      FCTP_yes_187                    ; ДА -
                cmp     WORD PTR ds:[bp + 14], 2        ; справка о номере телефона (*20) ?
                jne     FCTP_not_172                    ; НЕТ -
FCTP_yes_187:   mov     dl, 187                         ; ДА => будет использование ДВО, а не активация
FCTP_not_172:
                ; --- причина, место и детализация причины --------------------
                mov     al, bl
                @_STOSB
                mov     al, dh
                mov     ah, dl
                @_STOSW
                ; --- отбработаем отбой по белому списку ---
                test    FG_Duty1, _fg_wt_new        ; пришла новая 235/150
                jnz     @New_235_150                    ; ДА!
                 ; --- номер вызывающего ---------------------------------------
FCTP_Num_A:     mov     al, fs:[esi].len_a                      ; количество цифр в АОН"е
                inc     al                                      ; \ с учётом нечётной длины
                shr     al, 1                                   ; / число пар цифр в АОН"е
                @_STOSB                                         ; упакованную длину в ПУМу
                movzx   ecx, al
                jecxz   FCTP_Num_B                              ; на всякий случай
                xor     ebx, ebx                                ; offs первой пары от SOED3
FCTP_Na_Loop:   mov     al, fs:[esi + ebx].num_a
                rol     al, 4
                @_STOSB
                inc     ebx
                loop    FCTP_Na_Loop
                ; --- номер вызываемого ---------------------------------------
FCTP_Num_B:     mov     al, fs:[esi].len_b                      ; количество цифр в № Б
                ;;; --- vic -------------------------------------------
		cmp	dl, 172
                je      FCTP_Num_B_172
                cmp     dl, 176
                jb      FCTP_Num_B_No_172
                cmp     dl, 186
                ja      FCTP_Num_B_No_172
FCTP_Num_B_172: mov     al, ds:[bp + 12]
FCTP_Num_B_No_172:
                ;;; --- vic -------------------------------------------

                inc     al                                      ; \ с учётом нечётной длины
                shr     al, 1                                   ; / число пар цифр в № Б
                @_STOSB                                         ; упакованную длину в ПУМу
                movzx   cx, al
                jcxz    FCTP_OK                                 ; а № Б нет !
                xor     ebx, ebx                                ; offs первой пары от SOED
FCTP_Nb_Loop:   mov     al, fs:[esi + ebx].num_b
                rol     al, 4
                ;;; --- vic ---------------------------------------------------
		cmp	dl, 172
                je      FCTP_Nb_Loop_172
                cmp     dl, 176
                jb      FCTP_Nb_Loop_No_172
                cmp     dl, 186
                ja      FCTP_Nb_Loop_No_172
FCTP_Nb_Loop_172:

		push	bx dx
		add	bx, bp
		add	bx, 12
		mov     dx, ds:[bx]        ; читаем две цифры

		cmp	dh, 0Fh
		jne	FCTP_Nb_Loop_1
		mov	dh, 0dh
FCTP_Nb_Loop_1:
		cmp	dl, 0Fh
		jne	FCTP_Nb_Loop_2
		mov	dl, 0dh
FCTP_Nb_Loop_2:
                xchg    dl, dh
                shl     dl, 4
                shr     dx, 4           ; 2 цифры в 1ой тетраде, и 1ая в старшей !
                mov	al, dl		; запомним в SOED"e
                pop	dx bx
		inc	bx

		cmp	cx, 1
		jne	FCTP_Nb_Loop_No_172
		test	byte ptr ds:[bp + 12], 1
		jz	FCTP_Nb_Loop_No_172
		or	al, 0fh
FCTP_Nb_Loop_No_172:
                ;;; --- vic -----------------------------------------------------------

		@_STOSB
                inc     ebx
                loop    FCTP_Nb_Loop
FCTP_OK:        ; --- {Paul} --- [30/12/11] ---
                ; --- запишем категорию абонента ---
                mov     al, fs:[esi].cat_dig
                ;;cmp     al, 0FFh
                ;je      @@bad_cat
                @_STOSB
@@bad_cat:      ; --- запишем тип несостоявшегося соединения
                @CallTypeFailToPUMA
                mov     al, dl
                @_STOSB
                ; --- {Paul.N} --- <30/04/13>
                ; -- добавим 3 байта длительности соед.
                mov     ax, WORD PTR ds:[bp + 7]
                @_STOSW
                mov     al, BYTE PTR ds:[bp + 9]
                @_STOSB
                ; --- {Paul.N} --- <20/05/13>
                ; -- определим тип команды(150 or 151)
                mov     al, 1                           ; пока 150
                cmp     BYTE PTR ds:[bp + 4], 150
                je      @@go_type_com
                mov     al, 2                           ; а здесь 151
  @@go_type_com:@_STOSB
                ; --- {Paul} --- [THE END] ---
                ; --- завершаем вывод в ПУМу ----------------------------------
                call    PUMA_Send_Tar
                or      fs:[esi].soed_flags, sf_FAIL_OUT
                jmp     FCTP_Exit
             ; ----- обработка новой 235/150 (белый спиисок) -----
@New_235_150:   push    dx bx                         ; сохранимся!
                xor     cx, cx
                xor     bx, bx
                mov     bl, BYTE PTR ds:[bp + 3]        ; байт длины запомним
              ; --- длина № Б ---
                cmp     bl, 9                           ; на всякий случай
                jb      @End_Read_num                   ; если bp больше длины команды
                push    bp
                add     bp, 12                          ; bp -> длина №Б
                mov     al, ds:[bp]                     ; длина №Б (байт на цифру)
                and     ax, 00FFh
                add     al, 9
                inc     al
                cmp     al, bl                          ; есть ли №A - ?
                ja      @to_num_b                       ; да - не будем записывать №А
                sub     al, 9
                add     bp, ax                          ; bp -> длина №А
              ; --- длина № А ---
                mov     al, ds:[bp]                     ; длина №А (байт на цифру)
                movzx   cx, al
                jcxz    @to_num_b
                cmp     cx, 20
                jb      @num_a_ok
                mov     cx, 20                          ; запишем max. 20 цифр
@num_a_ok:
                inc     al
                shr     al, 1
               @_STOSB
              ; --- запишем №А ---
@Read_A:        mov     al, ds:[bp + 1]               ; цифра №A
                shl     al, 4
                mov     dl, al
                inc     bp
                cmp     cx, 1
                je      @last_dig_a
                mov     al, ds:[bp + 1]               ; еще цифра №А
                and     al, 0Fh
                or      al, dl
                inc     bp
                dec     cx
               @_STOSB
                loop    @Read_A
                jmp     @to_num_b
@last_dig_a:    or      al, 0Fh
               @_STOSB
                loop    @Read_A
@to_num_b:      pop     bp

              ; --- длина № Б ---
                push    bp
                add     bp, 12
                mov     al, ds:[bp]                    ; длина №Б
                movzx   cx, al
                jcxz    @End_Wht_New
                cmp     cx, 20
                jb      @num_b_ok
                mov     cx, 20                         ; запишем max. 20 цифр
@num_b_ok:
                inc     al
                shr     al, 1                          ; кол-во байт под упакованный формат
               @_STOSB
              ; --- запишем №Б ---
@Read_B:        mov     al, ds:[bp + 1]               ; цифра №Б
                shl     al, 4
                mov     dl, al
                inc     bp
                cmp     cx, 1                          ; осталась одна цифра
                je      @last_dig_b
                mov     al, ds:[bp + 1]               ; еще цифра №Б
                and     al, 0Fh
                or      al, dl
                inc     bp
                dec     cx
               @_STOSB
                loop    @Read_B
                pop     bp
                jmp     @End_Read_num

@last_dig_b:    or       al, 0Fh
               @_STOSB
                loop    @Read_B
@End_Wht_New:   pop     bp
@End_Read_num:  pop     bx dx
                and     FG_Duty1, not _fg_wt_new    ; сбросим флаг новой 235/150
                JMP     FCTP_OK
FCTP_Exit:      ret

FailedCallsToPUMA       ENDP


;******************************************************************************
;* приём конфигурации линии и запись её в сегмент конфигурации                *
;******************************************************************************
; вход:         eax       - номер ЦК
;               cx        - длина 235/214 и длина 235/215 - 1
;               ds:[bp]   - указатель на начало пакета конфигурации, вложенного в 235.214 или 215
; выход:        блок данных в SEG_KONF
;

Get_Line_Cfg    PROC
                ; ---
                mov     MO_CK, al
                mov     di, ds:[bp + 1]
                mov     MO_Phys, di
                ; --- по параметрам команды получим адрес в SEG_KONF
                mov     edi, eax
                shl     edi, 4                  ; 16 блоков в ЦК
                mov     dx, ds:[bp + 1]         ; \ номер
                shr     dx, 9                   ; / блока
                or      di, dx                  ; № ЦК и № блока вместе
                shl     edi, 3                  ; 8 байт на конфигурацию блока ЦК
                movzx   bx, BYTE PTR gs:[edi]   ; -- {Paul} - вспомним тип блока
                mov     edi, gs:[edi + 1]       ; адрес линий блока
		cmp	edi, Cfg_Free_Ptr
		jae	@@exit
                movzx   edx, WORD PTR ds:[bp + 1];\ номер
                and     dx, 1ffh                ; / линии
                ; --- {Paul} -- <15/06/12> --
                push    cx
		mov	cl, 4  ; MVT добавил обработку однопрефиксной конфигурации
                test    FG_PROGRAM, _fg_prg_multy_pref ; старая конфигурация ?
                jz      @@odnopref              ; ДА -
                mov     cl, TAB_TIP_LN[bx]       ; и размер конф. линии в сдвигах
@@odnopref:
                shl     edx, cl                  ; ? - байт на конфигурацию линии
                pop     cx
                ; --- {Paul} -- <END>
                add     edi, edx                ; адрес линии в SEG_KONF
		cmp	edi, Cfg_Free_Ptr
		jae	@@exit
		; --- приём данных
		cmp	BYTE PTR ds:[bp], 200   ; это конфигурация АЛ ?
		je	@@al                    ; ДА -
		; --- это конфигурация СЛ
@@sl:           mov     dl, ds:[bp + 3]         ; \ тип
                mov     gs:[edi], dl            ; / линии
                mov     edx, ds:[bp + 4]        ; \ СПУС
                mov     gs:[edi + 1], edx       ; /
                mov     edx, gs:[edi + 10]      ; № телефона в SEG_KONF
		shl	eax, 13                 ; \
                or      ax, ds:[bp + 1]         ;  \ абс. физ. № линии в формате
		shl	eax, 8                  ;  / СИДС с префиксом 254 (АОН)
		mov	al, 0feh                ; /
                mov     gs:[edi + 10], eax      ; запомним это вместо № телефона
		mov	eax, edx                ; ДА - удалим его из SEG_NLOG
		call	Del_Tel_Num
@@exit:         ret
                ; --- а это конфигурация АЛ
@@al:           ;mov     WORD PTR gs:[edi + 5], 0ffffh ;
                ;mov     BYTE PTR gs:[edi + 7], 0ffh   ;
                mov     BYTE PTR gs:[edi + 9], 0ffh   ; MVT раскомментировал очистку
                                                ; 1      1  (1)     1   2  5  1   1    4 = 16(17)
                sub     cx, 16                  ; 214(5),ЦК,(пакет),200,№ф,№т,тип,кат.,SPUS
                js      @@exit                  ; длина так мала, что нет даже обязательных параметров
                mov     dl, ds:[bp + 8]         ; \ тип
                mov     gs:[edi], dl            ; / линии
                mov     dl, ds:[bp + 9]         ; \ кате-
                mov     gs:[edi + 8], dl        ; / гория
		mov     edx, ds:[bp + 10]       ; \ СПУС
		mov	gs:[edi + 1], edx       ; /
                mov     edx, ds:[bp + 3]        ; получим начало номера абонента
		cmp	edx, 0ffffffffh		;
		je	@@try_delete		;
                shl     eax, 13                 ; \ абс. физ. № линии
		or	ax, ds:[bp + 1]         ; /в формате СИДС
                mov     edx, eax                ; в edx для Add_Tel_Num
                call    Check_Format_Tel_Num    ; сократим номер абонента до LENGTH_NUM
                mov     gs:[edi + 10], eax      ; запомним его в SEG_KONF
                call    Add_Tel_Num             ; и в SEG_NLOG
                jmp     @@al_opt_param          ;
@@try_delete:   mov     eax, gs:[edi + 10]      ;
                mov     gs:[edi + 10], edx      ;
                call    Del_Tel_Num             ;
                ; --- приём необязательных параметров АЛ
@@al_opt_param: push    bp
                cmp     cx, 3
                jb      @@extra_del             ; принудительно удалим УПАТС
                ; --- очистка перед разбором параметров линии
                mov     MO_UPATS_Num, 0ffffh    ;
                mov     MO_UPATS, 0ffh          ;
                ;
                add     bp, 14                  ; ук. на первый необязательный параметр
@@al_prm_loop:  mov     ax, ds:[bp]             ;
                ; ---
@@al_is_upats:  cmp     al, 32;;;31                  ;
                jne     @@al_is_upats_num       ;
                mov     al, ds:[bp + 2]         ;
                mov     MO_UPATS, al            ;
                jmp     @@al_save_upats         ;
                ; ---
@@al_is_upats_num:
                cmp     al, 33;;;32                  ;
                jne     @@al_is_ra              ;
                push    ax                      ;
                mov     ax, ds:[bp + 2]         ;
                mov     MO_UPATS_Num, ax        ;
                pop     ax                      ;
@@al_save_upats:
                cmp     MO_UPATS, 99            ;
                ja      @@al_next_prm             ;
                cmp     MO_UPATS_Num, 9999      ;
                ja      @@al_next_prm           ;
                ; -- {Paul.N -- 27/03/14}
                ; - бывает и такое -->
                cmp     MO_UPATS_Num, 100
                jb      @@al_next_prm
                pushad
		; --- приём данных
                movzx   eax, MO_UPATS           ; \ №
                mov     gs:[edi + 7], al        ; / УПАТС
                shl     eax, 16                 ;
                mov     ax, MO_UPATS_Num        ; \ № логический
                mov     gs:[edi + 5], ax        ; / в УПАТС
                ; заносим № в ULOG
                movzx   edx, MO_CK              ;
                shl     edx, 13                 ;
                or      dx, MO_Phys             ;
                call    Add_U_Num               ;
                popad
                jmp     @@al_next_prm           ;
                ; ---
@@al_is_ra:     cmp     al, 17                  ;
                jne     @@al_is_ht              ;
                mov     al, CFU_CFG             ;
                cmp     BYTE PTR ds:[bp + 2], 0 ;
                je      @@set_dvo               ;
                mov     al, CFNRY_CFG           ;
                cmp     BYTE PTR ds:[bp + 2], 1 ;
                je      @@set_dvo               ;
                mov     al, CFB_CFG             ;
                cmp     BYTE PTR ds:[bp + 2], 2 ;
                je      @@set_dvo               ;
                jmp     @@al_next_prm           ;
@@al_is_ht:     ; ---
                cmp     al, 27                  ;
                jne     @@al_is_oa              ;
                mov     al, HT_CFG              ;
                jmp     @@set_dvo               ;
@@al_is_oa:     ; ---
                cmp     al, 15                  ;
                jne     @@al_is_ma              ;
                mov     al, OA_CFG              ;
                jmp     @@set_dvo               ;
@@al_is_ma:     ; ---
                cmp     al, 16                  ;
                jne     @@al_next_prm           ;
                mov     al, MA_CFG              ;
                ; ----
@@set_dvo:      and     gs:[edi + 9], al        ;
                ; ----
@@al_next_prm:  add     ah, 2                   ;
                sub     cl, ah                  ;
                js      @@al_exit               ;
                jz      @@al_exit               ;
                movzx   ax, ah                  ;
                add     bp, ax                  ;
                jmp     @@al_prm_loop           ;
@@al_exit:      cmp     MO_UPATS, 99
                ja      @@extra_del
                cmp     MO_UPATS_Num, 9999      ;
                jbe     @@all_exit              ;
@@extra_del:    pushad
                movzx   eax, BYTE PTR gs:[edi + 7]      ;\
                shl     eax, 16                         ; EAX <-- номер УПАТС в формате СИДС
                mov     ax, WORD PTR gs:[edi + 5]       ;/
                call    Del_U_Num                     ; удалим номер из SEG_ULOG
                jnc     @@bad_del                     ; и...
                mov     WORD PTR gs:[edi + 5], 0ffffh ;\
                mov     BYTE PTR gs:[edi + 7], 0ffh   ; очистим сегмент конфигурации
;                mov     BYTE PTR gs:[edi + 9], 0ffh   ;/ MVT закомментировал - с какой стати чистить ДВО ?
   @@bad_del:   popad
@@all_exit:     pop     bp
                ret
Get_Line_Cfg    ENDP


; ---  In:      ds:[bp] - ук-ль на байт "тип пакета"(200/201)
; --- Out:      eax - укороченный до Length_Num номер телефона
Check_Format_Tel_Num    PROC
                push    ecx
                ; --- {Paul} --- <08/10/2012>
                mov     eax, ds:[bp + 3]
                ; --- {Paul} -- <END>
                mov     ecx, eax                ;
                and     ecx, 0f0000000h         ;
                cmp     ecx, 0f0000000h         ; старшая тетрада == f ?
                je      @@exit                  ; ДА - это короткий номер, форматирование не нужно
                mov     eax, ds:[bp + 4]        ;
                rol     al, 4                   ;
                rol     ah, 4                   ;
                rol     eax, 16                 ;
                rol     al, 4                   ;
                rol     ah, 4                   ;
                ror     eax, 16                 ;
                mov     cx, 8                   ;
                sub     cl, LENGTH_NUM          ;
                shl     cl, 2                   ;
@@loop:         stc                             ;
                rcr     eax, 1                  ;
                loop    @@loop                  ;
                rol     al, 4                   ;
                rol     ah, 4                   ;
                rol     eax, 16                 ;
                rol     al, 4                   ;
                rol     ah, 4                   ;
                ror     eax, 16                 ;
@@exit:         pop     ecx
                ret
Check_Format_Tel_Num    ENDP

